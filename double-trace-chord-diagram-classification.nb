(*find equivalent double-trace chord diagrams*)
(* family[[i]] gives \
the ith group of chord diagrams related by dihedral action on one \
trace*)
(*family[[i]] with different i can still be related by a \
remanant of dihedral*diheral on two traces, classes[[]] collect them*)
\
(*different classes in classes[[]] can still have the same \
intersection structure, I did not bother to code such equivalences, \
instead I find them by hand*)
Clear[k, family, familySize, \
numberOfFamilies, perm, fixedPointlist, countZerosFixedpoint, \
parallelContractionsMax]
k = 5;
numberOfFamilies = k!/(2 k);
perm = Permutations[Table[i, {i, 1, k}]];
family = Table[{}, {i, 1, numberOfFamilies}];
familyPermSupport = Table[{}, {i, 1, numberOfFamilies}];
For[i = 1, i < numberOfFamilies + 1, i++,
 family[[i]] = Permute[perm[[1]], DihedralGroup[k]];
 familyPermSupport[[i]] = 
  Table[PermutationSupport[family[[i, j]]], {j, 1, 2 k}];
 perm = DeleteCases[perm, Alternatives @@ family[[i]]];
 ]
numberofElements = k;
dihedralSize = 2 k;
classes = {};
remainingfamlies = Table[i, {i, 1, numberOfFamilies}];
For[i = 1, i < numberOfFamilies + 1, i++,
  If[IntersectingQ[{i}, remainingfamlies],
   tempclass = {i};
   movementi = 
    Flatten[Table[
       Table[Position[family[[i]][[w]], family[[1]][[l]][[m]]], {m, 1,
           numberofElements}] // Flatten, {w, 1, dihedralSize}, {l, 1,
         dihedralSize}], 1] // DeleteDuplicates;
   For[j = i + 1, j < numberOfFamilies + 1, j++,
    movementj = 
     Flatten[Table[
        Table[Position[family[[j]][[w]], family[[1]][[l]][[m]]], {m, 
           1, numberofElements}] // Flatten, {w, 1, dihedralSize}, {l,
          1, dihedralSize}], 1] // DeleteDuplicates;
    If[IntersectingQ[movementi, movementj], AppendTo[tempclass, j]; 
     remainingfamlies = DeleteCases[remainingfamlies, j]]
    ];
   AppendTo[classes, tempclass];
   remainingfamlies = DeleteCases[remainingfamlies, i]]
  ];
(*find in each class, which representative chord diagrams have the \
fewest intersections among chords*)

fixedPointlist = 
  Table[family[[i]] - ConstantArray[Table[j, {j, 1, k}], 2 k], {i, 1, 
    numberOfFamilies}];
countZerosFixedpoint = 
  Table[Table[Count[fixedPointlist[[i]][[j]], 0], {j, 1, 2 k}], {i, 1,
     numberOfFamilies}];
parallelContractionsMax = Max /@ countZerosFixedpoint ;
fewestParallels = parallelContractionsMax // Min;



(*Results:
k=3: parallelContractionsMax = {3};
k=4: parallelContractionsMax = {4,2,2}, fewestParallels = 2;
k=5: parallelContractionsMax = {5,3,3,2,2,3,3,2,2,1,2,3}, \
fewestParallels = 1;
   k=6: parallelContractionsMax = \
{6,4,4,3,3,4,4,2,3,3,2,3,3,2,4,3,3,2,3,3,3,4,2,4,4,4,2,3,3,3,3,3,3,2,\
2,2,3,2,2,2,2,2,3,3,2,2,4,3,3,2,3,2,2,2,3,3,3,4,2,4}, fewestParallels \
= 2;
k=7: parallelContractionsMax \
={7,5,5,4,4,5,5,3,4,3,3,4,4,3,5,4,3,3,3,4,4,5,3,5,5,3,3,3,3,3,4,3,3,4,\
3,3,3,2,4,3,2,2,3,3,3,4,3,4,4,3,3,3,2,3,5,3,4,3,3,4,3,2,3,2,3,3,2,3,3,\
3,4,3,3,3,4,3,2,3,4,3,5,4,3,3,3,3,5,4,4,3,3,4,4,3,3,3,4,3,3,4,2,4,3,4,\
4,5,3,3,2,3,4,3,3,3,3,3,3,3,3,5,5,3,3,3,3,5,3,3,3,4,3,4,3,3,3,2,4,3,4,\
4,2,3,3,4,4,3,3,4,2,4,3,4,4,3,3,3,3,3,2,3,2,3,3,3,2,3,2,3,4,2,3,3,2,2,\
2,3,1,2,2,3,3,3,3,2,3,2,3,2,4,3,3,3,4,3,2,3,3,3,3,3,3,3,3,3,2,3,3,2,2,\
3,3,3,3,3,2,3,4,3,3,2,4,4,3,3,3,3,2,2,3,3,3,3,2,2,5,5,3,4,4,3,4,4,3,3,\
3,3,4,3,3,3,3,2,3,4,2,3,3,3,2,3,3,3,2,3,2,3,3,3,3,2,3,2,4,3,3,3,3,3,3,\
2,3,2,2,1,3,2,3,2,3,4,3,3,4,2,3,2,2,3,2,3,4,4,3,3,5,3,4,3,3,3,2,3,3,3,\
3,2,5,4,4,3,4,3,3,3,3,4,4,3,3,3,3,3,3,3,3,3,4,3,3,4,2,4,3,4,4,5,3,3,2,\
3,4,3,3,3,3,3,3,3,3,5}, fewestParallels = 1；
k=8: parallelContractionMax= \
{8,6,6,5,5,6,6,4,5,4,4,5,5,4,6,5,4,4,4,5,5,6,4,4,6,4,4,3,3,4,5,3,4,4,\
3,4,4,3,5,4,3,3,3,4,4,5,3,3,5,3,4,3,3,4,6,4,5,4,4,5,4,3,4,3,3,4,3,4,3,\
4,3,3,4,3,5,4,3,3,5,4,6,5,4,4,4,3,4,3,3,3,3,3,3,3,4,4,4,4,4,5,3,3,4,5,\
5,6,4,4,3,4,3,4,3,4,4,3,3,4,4,6,6,4,4,3,3,4,4,4,3,4,3,3,3,3,4,3,3,2,4,\
3,3,4,2,4,5,3,3,4,2,3,4,4,4,5,3,3,3,3,4,3,2,2,2,3,3,4,3,3,4,3,3,3,2,3,\
5,3,4,3,4,4,3,2,3,2,3,3,2,3,3,3,3,2,3,2,4,3,3,2,4,3,5,4,3,3,3,3,3,4,2,\
3,2,3,2,3,3,3,3,3,4,4,3,3,3,4,4,5,3,3,3,3,2,3,3,3,4,3,3,3,4,5,5,3,3,2,\
4,3,4,3,3,3,2,3,3,2,4,4,3,3,3,3,3,4,2,3,6,4,4,3,3,4,5,3,4,3,3,4,4,3,5,\
4,3,3,3,4,4,5,3,3,4,3,3,2,3,3,4,2,3,2,3,3,3,3,4,3,4,4,2,3,4,3,3,2,3,3,\
4,3,2,2,3,2,4,3,2,2,3,2,3,3,2,4,2,2,3,3,3,3,2,3,3,4,2,3,3,3,3,4,2,2,2,\
3,3,3,3,3,3,4,3,3,5,4,4,4,3,2,3,3,5,3,4,3,3,4,3,2,3,3,2,4,2,3,3,3,3,3,\
5,3,4,3,3,4,6,4,5,4,4,5,4,3,4,3,3,3,3,4,3,4,3,3,4,2,3,3,2,3,4,4,3,3,3,\
3,3,3,3,2,3,2,3,3,3,3,2,3,3,2,3,2,2,3,3,3,3,3,2,3,4,3,4,3,3,3,3,3,3,4,\
3,4,3,3,2,3,2,4,3,3,3,3,2,3,3,4,4,4,3,3,3,5,3,4,4,3,4,3,4,3,2,3,4,4,5,\
4,3,3,3,3,3,2,2,3,3,3,2,3,3,4,4,3,5,4,3,3,5,4,6,5,4,4,4,3,4,3,3,3,3,3,\
3,3,4,4,3,3,4,3,2,2,3,3,4,3,3,2,3,3,4,3,3,3,2,2,4,3,3,3,4,4,3,3,3,3,3,\
3,4,3,4,3,4,4,6,5,5,4,3,3,5,4,4,3,4,3,2,3,3,5,3,2,3,3,3,4,3,3,5,4,4,4,\
3,4,4,3,4,4,5,3,3,4,2,3,3,4,4,5,3,3,2,3,4,3,3,3,3,2,3,3,3,5,3,4,4,5,3,\
3,4,5,5,6,4,4,3,4,3,4,3,3,3,3,3,3,4,4,2,3,3,4,2,2,3,3,3,4,2,2,3,3,3,3,\
3,4,3,3,3,2,4,3,3,3,3,3,3,3,2,3,3,3,3,2,3,4,5,4,4,3,4,4,4,3,3,4,4,2,4,\
3,3,4,2,3,3,4,3,3,3,3,4,3,4,4,4,3,3,4,4,6,6,4,4,3,3,4,4,3,3,4,2,3,3,2,\
4,3,2,4,4,3,3,4,4,6,4,3,4,4,4,3,3,4,4,5,3,3,3,3,3,3,2,3,4,3,3,3,4,5,3,\
4,3,4,3,3,4,4,3,3,3,3,3,3,2,2,3,3,3,4,3,3,5,4,4,3,3,3,2,4,3,3,4,3,2,3,\
2,3,4,3,3,2,3,5,3,4,4,3,5,3,3,3,3,5,3,3,3,4,3,4,2,3,3,2,4,3,3,4,2,3,3,\
5,5,3,3,4,2,4,3,4,4,5,3,3,2,3,3,3,3,3,3,3,2,3,3,5,4,4,4,5,3,3,4,5,5,4,\
3,4,3,3,3,3,3,4,3,4,3,4,3,2,4,3,3,3,2,3,2,3,2,3,2,4,2,3,3,3,2,3,3,3,4,\
2,3,4,3,3,2,4,3,3,3,2,3,3,3,4,2,3,3,3,3,3,3,4,3,3,2,3,4,2,3,3,3,4,3,3,\
3,4,2,3,2,3,3,3,3,3,3,3,2,3,3,4,5,3,3,3,2,3,4,3,3,2,4,3,4,3,3,3,3,3,3,\
3,2,3,3,3,3,2,2,3,3,3,3,4,2,2,3,3,2,2,3,2,2,2,3,2,3,2,3,3,2,2,2,3,3,3,\
2,2,2,3,2,3,3,2,2,2,2,3,2,3,2,3,2,4,3,3,2,3,2,3,4,3,3,3,2,3,3,2,2,2,2,\
3,3,3,2,2,4,3,4,3,3,3,2,3,5,3,4,3,3,2,3,2,2,3,3,4,3,3,3,4,2,2,3,3,4,4,\
2,3,3,3,2,2,3,3,2,2,3,2,3,2,2,2,3,3,3,2,3,3,3,3,4,4,2,2,2,2,3,3,2,2,3,\
3,2,3,3,2,2,4,2,3,3,2,3,2,3,3,4,4,4,3,3,3,3,3,3,3,2,2,4,4,2,3,3,3,3,2,\
4,3,2,3,4,3,5,3,3,3,3,2,2,4,2,3,3,3,3,3,2,2,2,3,3,3,3,4,3,3,2,3,3,2,4,\
4,3,3,3,3,3,3,3,3,4,4,5,4,3,3,4,3,3,3,2,3,3,4,3,3,2,2,3,4,4,3,3,4,3,3,\
4,3,2,3,3,4,3,3,3,4,2,3,3,2,4,3,3,3,4,3,3,2,3,4,3,3,3,4,2,4,3,4,4,3,2,\
3,3,3,2,3,2,3,2,2,3,3,3,3,3,2,3,3,3,3,3,4,2,2,2,3,3,3,3,2,4,2,2,2,3,3,\
3,3,4,3,3,3,3,2,3,3,4,3,4,3,2,3,3,2,3,2,3,3,4,3,3,4,5,3,3,2,4,4,3,4,2,\
3,3,3,4,3,3,2,3,3,5,3,3,3,3,5,4,2,3,3,3,4,3,3,3,2,2,2,3,3,3,3,2,3,3,3,\
2,3,3,3,4,3,4,4,3,3,3,4,2,3,3,4,3,2,3,2,3,3,3,2,4,3,2,2,3,2,2,4,2,3,4,\
3,3,3,3,4,3,3,3,3,2,2,3,3,3,3,2,3,6,4,4,4,4,6,4,3,3,3,4,5,3,4,4,3,5,4,\
3,5,3,4,4,4,5,3,3,3,3,5,4,3,3,3,3,3,4,4,2,4,3,3,4,3,3,2,3,4,5,3,4,3,3,\
3,3,4,2,3,2,3,3,3,4,3,4,3,4,3,5,4,3,2,3,3,3,3,3,3,3,4,3,4,3,3,3,4,4,3,\
2,3,2,2,3,2,3,3,4,2,3,3,3,5,3,2,2,3,3,3,3,4,2,4,2,3,4,4,2,3,3,4,3,3,2,\
3,3,3,3,4,3,3,2,2,3,3,3,4,4,3,3,4,4,4,3,3,2,2,3,3,4,3,3,3,3,2,2,3,2,3,\
2,2,3,3,2,2,3,2,3,3,3,2,3,2,3,4,4,2,3,3,2,2,2,3,2,3,2,3,3,4,2,3,3,3,4,\
3,3,2,2,2,2,3,2,2,3,3,3,3,2,2,3,2,3,3,2,4,2,4,2,3,2,2,3,2,3,3,3,3,3,4,\
2,3,2,2,2,2,2,2,3,3,3,3,2,3,3,2,4,3,3,3,4,4,2,2,3,3,3,3,3,3,3,3,3,3,3,\
2,3,3,4,3,2,2,2,2,2,3,2,2,2,2,3,3,3,2,3,3,3,3,3,3,3,3,4,4,3,3,3,3,5,4,\
4,3,2,3,3,3,3,3,2,2,4,3,4,2,3,4,3,3,4,3,2,4,3,3,2,3,3,2,3,3,3,2,4,3,3,\
3,2,3,3,3,3,2,2,2,3,2,2,2,2,2,3,3,2,2,2,3,2,2,2,3,2,3,3,4,3,3,2,2,2,2,\
4,3,3,3,3,4,3,3,3,2,3,2,3,2,3,3,4,4,4,3,5,3,3,4,2,3,3,3,3,2,4,2,3,3,5,\
3,3,2,3,3,4,3,3,2,3,2,4,2,3,3,3,3,3,3,2,2,3,3,3,3,2,4,2,4,2,3,3,2,3,2,\
3,2,3,3,3,3,3,3,2,2,4,2,3,2,2,3,2,3,5,3,3,3,3,5,4,3,3,3,3,3,4,4,2,4,3,\
3,6,4,4,3,3,4,5,3,4,3,4,3,5,3,3,4,4,3,4,4,3,3,4,3,3,2,3,3,2,3,3,3,4,3,\
3,2,4,3,3,3,3,4,3,3,3,2,3,3,3,2,2,2,2,2,4,4,2,3,3,4,3,4,3,3,2,3,3,3,3,\
3,3,2,4,6,4,5,5,4,3,5,3,4,3,4,3,3,4,3,4,3,3,5,3,4,3,4,2,3,3,2,3,3,3,4,\
3,3,3,3,3,3,2,3,3,4,4,3,4,3,3,2,3,2,3,3,3,2,3,3,2,2,3,3,2,2,2,3,3,3,3,\
5,3,4,3,4,3,3,2,3,3,4,4,4,3,3,4,3,3,3,3,3,3,4,3,3,3,4,3,4,3,3,2,3,3,4,\
3,4,3,3,2,2,3,3,2,4,2,4,3,4,3,3,3,3,3,2,2,3,2,3,3,3,4,3,4,3,4,2,3,3,3,\
3,3,5,3,4,4,3,3,4,3,3,4,3,3,4,2,3,3,3,2,2,3,3,3,3,4,3,4,3,4,2,3,2,3,3,\
2,2,3,3,3,2,3,3,3,2,2,2,2,2,4,4,2,3,3,3,4,3,3,3,2,3,4,5,3,4,4,3,3,3,2,\
3,3,4,4,3,4,3,5,3,4,3,3,3,2,3,3,2,3,2,3,3,2,3,2,3,2,3,3,3,2,3,3,4,3,3,\
3,4,2,4,4,3,3,3,5,3,4,3,3,3,3,2,5,3,4,3,6,4,5,4,4,4,3,3,4,3,3,2,4,2,3,\
3,3,3,2,2,3,3,3,3,4,4,2,2,3,3,3,3,3,3,3,3,4,3,3,3,2,2,2,2,3,5,3,4,4,4,\
3,3,3,2,3,3,3,4,3,3,4,3,3,2,3,3,3,3,2,2,4,3,3,3,3,3,3,2,4,2,4,3,4,3,3,\
2,3,2,3,3,2,3,3,4,3,3,4,3,3,3,4,3,3,2,4,3,4,3,6,5,5,4,5,4,4,3,3,3,5,4,\
4,3,3,3,4,3,4,3,4,3,2,3,3,5,3,2,3,3,3,4,3,3,5,4,4,4,3,4,4,3,4,4,4,3,2,\
3,3,4,3,3,3,4,2,3,3,2,4,3,3,3,4,3,3,2,3,4,5,3,3,4,2,3,3,4,4,5,3,3,2,3,\
4,3,3,3,3,2,3,3,3,5,3,4,4,5,3,3,4,5,5,6,4,4,3,4,3,4,3,3,3,3,3,3,4,4,2,\
3,3,4,2,2,3,3,3,4,2,2,3,3,3,3,3,4,3,3,3,2,4,3,3,3,3,3,3,3,2,3,3,3,3,2,\
3,4,5,4,4,3,4,4,4,3,3,4,4,2,4,3,3,4,2,3,3,4,3,3,3,3,4,3,4,4,4,3,3,4,4,\
6}， fewestParallels = 2;
*)
